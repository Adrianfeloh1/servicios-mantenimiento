{"version":3,"sources":["app.js"],"names":["pagina","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","db","json","servicios","servicio","id","nombre","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains"],"mappings":"AAEA,IAAAA,OAAA,EAMA,SAAAC,aAEAC,mBAGAC,iBAGAC,iBAGAC,kBAEAC,iBAIAC,mBAGA,SAAAJ,iBAGA,MAAAK,EAAAC,SAAAC,cAAA,oBACAF,GACAA,EAAAG,UAAAC,OAAA,mBAGAH,SAAAC,cAAA,SAAAV,QACAW,UAAAE,IAAA,mBAGA,MAAAC,EAAAL,SAAAC,cAAA,iBACAI,GACAA,EAAAH,UAAAC,OAAA,UAIAH,SAAAC,cAAA,eAAAV,YACAW,UAAAE,IAAA,UAGA,SAAAT,iBAEAK,SAAAM,iBAAA,gBAIAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBAGApB,OAAAqB,SAAAF,EAAAG,OAAAC,QAAAC,MAKArB,iBAEAI,uBAKAkB,eAAAvB,mBACA,IACA,MAAAwB,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QAEAC,UAAAA,GAAAF,EAKAE,EAAAd,QAAAe,IAKA,MAAAC,GAAAA,EAAAC,OAAAA,EAAAC,OAAAA,GAAAH,EAKAI,EAAA1B,SAAA2B,cAAA,KACAD,EAAAE,YAAAJ,EACAE,EAAAxB,UAAAE,IAAA,mBAKA,MAAAyB,EAAA7B,SAAA2B,cAAA,KACAE,EAAAD,YAAA,KAAAH,EACAI,EAAA3B,UAAAE,IAAA,mBAKA,MAAA0B,EAAA9B,SAAA2B,cAAA,OACAG,EAAA5B,UAAAE,IAAA,YAGA0B,EAAAhB,QAAAiB,WAAAR,EAGAO,EAAAE,QAAAC,oBAIAH,EAAAI,YAAAR,GACAI,EAAAI,YAAAL,GAKA7B,SAAAC,cAAA,cAAAiC,YAAAJ,KAEA,MAAAK,GACAC,QAAAC,IAAAF,IAIA,SAAAF,oBAAAvB,GAKA,IAAA4B,EAJAF,QAAAC,IAAA3B,EAAAG,OAAA0B,SAMAD,EADA,MAAA5B,EAAAG,OAAA0B,QACA7B,EAAAG,OAAA2B,cAGA9B,EAAAG,OAEAuB,QAAAC,IAAAC,EAAAxB,QAAAiB,YAEAO,EAAApC,UAAAuC,SAAA,gBAEAH,EAAApC,UAAAC,OAAA,gBAEAmC,EAAApC,UAAAE,IAAA,gBAIA,SAAAR,kBAEAI,SAAAC,cAAA,cACAQ,iBAAA,QAAA,KACAlB,SACA6C,QAAAC,IAAA9C,QAEAO,qBAIA,SAAAD,iBAEAG,SAAAC,cAAA,aACAQ,iBAAA,QAAA,KACAlB,SACA6C,QAAAC,IAAA9C,QAEAO,qBAMA,SAAAA,mBACA,MAAAF,EAAAI,SAAAC,cAAA,cACAJ,EAAAG,SAAAC,cAAA,aAEA,IAAAV,OACAM,EAAAK,UAAAE,IAAA,WACA,IAAAb,QACAK,EAAAM,UAAAE,IAAA,WACAP,EAAAK,UAAAC,OAAA,aAEAN,EAAAK,UAAAC,OAAA,WACAP,EAAAM,UAAAC,OAAA,YAGAT,iBA3LAM,SAAAS,iBAAA,oBAAA,WACAjB","file":"bundle.js","sourcesContent":["//paso 3 para crear las diferentes secciones del html paso - 1, 2, 3. se crea una variable global\r\n\r\nlet pagina = 1;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n  //console.log(\"iniciando app\"); // para verificar que si estoy llamando todo el codigo HTML\r\n  mostrarServicios();\r\n\r\n  //Resalta el div actual sugun el tab que se presiona - paso 3\r\n  mostrarSeccion();\r\n\r\n  //Oculta o muestra una seccion segun el tab que se presiona - paso 3\r\n  cambiarSeccion();\r\n\r\n  //paginacion siguiente y anterior\r\n  paginaSiguiente();\r\n\r\n  paginaAnterior();\r\n\r\n  //comprueba la pagina actual para oculatar o mostrar la paginacion\r\n\r\n  botonesPaginador();\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n\r\n//Eliminar mostrar-seccion de la seccion anterior\r\n  const seccionAnterior = document.querySelector(\".mostrar-seccion\");\r\n  if (seccionAnterior) {\r\n    seccionAnterior.classList.remove(\"mostrar-seccion\");\r\n  }  \r\n\r\n  const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n  seccionActual.classList.add(\"mostrar-seccion\");\r\n\r\n  //elimina la clase actual en el tab anterior\r\n  const tabAnterior = document.querySelector(\".tabs .actual\");\r\n  if (tabAnterior) {\r\n    tabAnterior.classList.remove(\"actual\");\r\n  }\r\n  \r\n  //resalta el tab actual\r\n  const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n  tab.classList.add(\"actual\");\r\n}\r\n\r\nfunction cambiarSeccion() {\r\n  // vamos al HTML y seleccionamos la clase tabs y despues la clase button de la nav\r\n  const enlaces = document.querySelectorAll(\".tabs button\");\r\n  //ahora agregamos un eventlisentner, pero como solo se le puede agregar a un solo elemento.\r\n  //no puede ser agregar a una coleccion de elementos, entonces tenemos que iterar..\r\n\r\n  enlaces.forEach((enlace) => {\r\n    enlace.addEventListener(\"click\", e => {\r\n      e.preventDefault();\r\n      //console.log(\"click en un boton de nav\"); // asi verificamos que los botones se ven en la consola\r\n      //console.log(e.target.dataset.paso); //paso es dado en el html data-paso y verificamos en la consola\r\n      pagina = parseInt(e.target.dataset.paso); //para pasarlo de string a number\r\n\r\n     \r\n      \r\n      //llamamos la funcion de mostrar seccion 4.\r\n      mostrarSeccion();\r\n\r\n      botonesPaginador();\r\n    })\r\n  })\r\n}\r\n\r\nasync function mostrarServicios() {\r\n  try {\r\n    const resultado = await fetch(\"./servicios.json\");\r\n    const db = await resultado.json();\r\n\r\n    const {servicios} = db; //Para que consulte todos los servicios dentro del array\r\n    //console.log(servicios); // para verificar que aparezcan todos los servicios en la consola\r\n\r\n    //2.Generar todo el HTML\r\n\r\n    servicios.forEach((servicio) => {\r\n      //console.log(servicio); //Conforme vaya iterando, se va a crear la variable servicio\r\n\r\n      // destructuring para crear una sola variable con cada propiedad del objeto\r\n\r\n      const { id, nombre, precio } = servicio; //itaración\r\n\r\n      //DOM scripting = GENERAR CODIGO HTML CON SCRIPTING\r\n\r\n      //GENERAR NOMBRE DE SERVICIOS\r\n      const nombreServicio = document.createElement(\"P\"); // en el parrafo estamos creando la variable nombreServicio\r\n      nombreServicio.textContent = nombre; // le decimos que su contenido va a ser el resultado de la interacion = servicio\r\n      nombreServicio.classList.add(\"nombre-servicio\"); // agregamos una clase a esa etiqueta P\r\n\r\n      //console.log(nombreServicio);//para verificar en consola\r\n\r\n      //GENERAR EL PRECIO DEL SERVICIO\r\n      const precioServicio = document.createElement(\"P\"); // creando el párrafo para el precio\r\n      precioServicio.textContent = \"$ \" + precio; // su contenido va a ser el resultado de la interación = servicio\r\n      precioServicio.classList.add(\"precio-servicio\");\r\n\r\n      //console.log(precioServicio);//para verificar en consola\r\n\r\n      //GENERAR EL DIV CONTENEDOR DE CADA SERVICIO\r\n      const servicioDiv = document.createElement(\"DIV\");\r\n      servicioDiv.classList.add(\"servicio\");\r\n      //console.log(servicioDiv); //para verificar que se vea en la consola\r\n\r\n      servicioDiv.dataset.idServicio = id; //para que seleccione el numero del id que el usuario está seleccionando 2.\r\n\r\n      //Selecciona un servicio para la cita\r\n      servicioDiv.onclick = seleccionarServicio; //se debe crear la fución abajo  2.\r\n\r\n      //INYECTAR LAS VARIABLES DE PRECIO Y NOMBRE AL DIV DE SERVICIO\r\n\r\n      servicioDiv.appendChild(nombreServicio);\r\n      servicioDiv.appendChild(precioServicio);\r\n\r\n      //console.log(servicioDiv);//para verificar en consola\r\n\r\n      //INYECTARLO EN EL HTML - se debe crear una id =\"servicios\" del HTML\r\n      document.querySelector(\"#servicios\").appendChild(servicioDiv); // para visualizarlo en el HTML\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n  console.log(e.target.tagName); // el evento se propaga en los hijos (DIV y P)\r\n\r\n  //forzar al elemento al cual le dimos click se el DIV\r\n\r\n  let elemento;\r\n  if (e.target.tagName === \"P\") {\r\n    elemento = e.target.parentElement;\r\n    //console.log(e.target.parentElement); para verificar que si se esté dando el mismo resultado\r\n  } else {\r\n    elemento = e.target;\r\n  }\r\n  console.log(elemento.dataset.idServicio); // no importa en que parte le demos click, el va a reconocer el id\r\n\r\n  if (elemento.classList.contains(\"seleccionado\")) {\r\n    // si lo contiene\r\n    elemento.classList.remove(\"seleccionado\"); // entonces removerlo\r\n  } else {\r\n    elemento.classList.add(\"seleccionado\"); //y si no lo contiene entonces crearlo\r\n  }\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n  //console.log(\"pagina siguiente\");//para verificar que se estan viendo las funciones en la consola\r\n  const paginaSiguiente = document.querySelector(\"#siguiente\");\r\n  paginaSiguiente.addEventListener(\"click\", () => {\r\n    pagina++;\r\n    console.log(pagina); //verificamos en consola que aumente las paginas ++\r\n\r\n    botonesPaginador(); //para reiniciar los valores del documento cada vez que damos en sigiuiente o anterior\r\n  });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n  //console.log(\"pagina anterior\");\r\n  const paginaAnterior = document.querySelector(\"#anterior\");\r\n  paginaAnterior.addEventListener(\"click\", () => {\r\n    pagina--;\r\n    console.log(pagina);\r\n\r\n    botonesPaginador(); //para reiniciar los valores del documento cada vez que damos en sigiuiente o anterior\r\n  });\r\n}\r\n\r\n// Secrea funcion para darle limites a las paginas\r\n\r\nfunction botonesPaginador() {\r\n  const paginaSiguiente = document.querySelector(\"#siguiente\");\r\n  const paginaAnterior = document.querySelector(\"#anterior\");\r\n\r\n  if (pagina === 1) {\r\n    paginaAnterior.classList.add(\"ocultar\");\r\n  } else if (pagina === 3) {\r\n    paginaSiguiente.classList.add(\"ocultar\");\r\n    paginaAnterior.classList.remove(\"ocultar\");\r\n  } else {\r\n    paginaAnterior.classList.remove(\"ocultar\");\r\n    paginaSiguiente.classList.remove(\"ocultar\");\r\n  }\r\n  // con esto cambian las paginas pero no cambia el contenido\r\n  mostrarSeccion(); //entonces se debe de llamar la funcion que cambia las secciones\r\n  \r\n}\r\n"]}