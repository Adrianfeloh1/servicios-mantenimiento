{"version":3,"sources":["app.js"],"names":["pagina","cita","nombre","fecha","hora","servicios","iniciarApp","mostrarServicios","mostrarSeccion","cambiarSeccion","paginaSiguiente","paginaAnterior","botonesPaginador","mostrarResumen","nombreCita","seccionAnterior","document","querySelector","classList","remove","add","tabAnterior","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","parseInt","target","dataset","paso","async","resultado","fetch","db","json","servicio","id","precio","nombreServicio","createElement","textContent","precioServicio","servicioDiv","idServicio","onclick","seleccionarServicio","appendChild","error","console","log","elemento","tagName","parentElement","contains","eliminarServicio","agregarServicio","firstElementChild","nextElementSibling","filter","servicioObjeto","resumenDiv","Object","values","includes","noServicios","nombreTexto","value","trim","length","mostrarAlerta","alerta","mensaje","tipo"],"mappings":"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","file":"bundle.js","sourcesContent":["//paso 3 para crear las diferentes secciones del html paso - 1, 2, 3. se crea una variable global\r\n\r\nlet pagina = 1;\r\n\r\n//vamos a crear un objeto para la validación de la cita del formulario\r\n\r\nconst cita = {\r\n  nombre: \"\",\r\n  fecha: \"\",\r\n  hora: \"\",\r\n  servicios: [],\r\n};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n  //console.log(\"iniciando app\"); // para verificar que si estoy llamando todo el codigo HTML\r\n  mostrarServicios();\r\n\r\n  //Resalta el div actual sugun el tab que se presiona - paso 3\r\n  mostrarSeccion();\r\n\r\n  //Oculta o muestra una seccion segun el tab que se presiona - paso 3\r\n  cambiarSeccion();\r\n\r\n  //paginacion siguiente y anterior\r\n  paginaSiguiente();\r\n\r\n  paginaAnterior();\r\n\r\n  //comprueba la pagina actual para oculatar o mostrar la paginacion\r\n\r\n  botonesPaginador();\r\n\r\n  //muestra el resumen de la cita o mensaje de error cuando no pase la validación\r\n\r\n  mostrarResumen();\r\n\r\n  //Almacena el nombre de la cita en el objeto\r\n\r\n  nombreCita();\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n  //Eliminar mostrar-seccion de la seccion anterior\r\n  const seccionAnterior = document.querySelector(\".mostrar-seccion\"); // querySelector para capturar se usa el punto primero \".mostrar-seccion\"\r\n  if (seccionAnterior) {\r\n    seccionAnterior.classList.remove(\"mostrar-seccion\"); //classList se captura si el punto (\"mostrar-seccion\")\r\n  }\r\n\r\n  const seccionActual = document.querySelector(`#paso-${pagina}`);\r\n  seccionActual.classList.add(\"mostrar-seccion\");\r\n\r\n  //elimina la clase actual en el tab anterior\r\n  const tabAnterior = document.querySelector(\".tabs .actual\");\r\n  if (tabAnterior) {\r\n    tabAnterior.classList.remove(\"actual\");\r\n  }\r\n\r\n  //resalta el tab actual\r\n  const tab = document.querySelector(`[data-paso=\"${pagina}\"]`);\r\n  tab.classList.add(\"actual\");\r\n}\r\n\r\nfunction cambiarSeccion() {\r\n  // vamos al HTML y seleccionamos la clase tabs y despues la clase button de la nav\r\n  const enlaces = document.querySelectorAll(\".tabs button\");\r\n  //ahora agregamos un eventlisentner, pero como solo se le puede agregar a un solo elemento.\r\n  //no puede ser agregar a una coleccion de elementos, entonces tenemos que iterar..\r\n\r\n  enlaces.forEach((enlace) => {\r\n    enlace.addEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n      //console.log(\"click en un boton de nav\"); // asi verificamos que los botones se ven en la consola\r\n      //console.log(e.target.dataset.paso); //paso es dado en el html data-paso y verificamos en la consola\r\n      pagina = parseInt(e.target.dataset.paso); //para pasarlo de string a number\r\n\r\n      //llamamos la funcion de mostrar seccion 4.\r\n      mostrarSeccion();\r\n\r\n      botonesPaginador();\r\n    });\r\n  });\r\n}\r\n\r\nasync function mostrarServicios() {\r\n  try {\r\n    const resultado = await fetch(\"./servicios.json\");\r\n    const db = await resultado.json();\r\n\r\n    const { servicios } = db; //Para que consulte todos los servicios dentro del array\r\n    //console.log(servicios); // para verificar que aparezcan todos los servicios en la consola\r\n\r\n    //2.Generar todo el HTML\r\n\r\n    servicios.forEach((servicio) => {\r\n      //console.log(servicio); //Conforme vaya iterando, se va a crear la variable servicio\r\n\r\n      // destructuring para crear una sola variable con cada propiedad del objeto\r\n\r\n      const { id, nombre, precio } = servicio; //itaración\r\n\r\n      //DOM scripting = GENERAR CODIGO HTML CON SCRIPTING\r\n\r\n      //GENERAR NOMBRE DE SERVICIOS\r\n      const nombreServicio = document.createElement(\"P\"); // en el parrafo estamos creando la variable nombreServicio\r\n      nombreServicio.textContent = nombre; // le decimos que su contenido va a ser el resultado de la interacion = servicio\r\n      nombreServicio.classList.add(\"nombre-servicio\"); // agregamos una clase a esa etiqueta P\r\n\r\n      //console.log(nombreServicio);//para verificar en consola\r\n\r\n      //GENERAR EL PRECIO DEL SERVICIO\r\n      const precioServicio = document.createElement(\"P\"); // creando el párrafo para el precio\r\n      precioServicio.textContent = \"$ \" + precio; // su contenido va a ser el resultado de la interación = servicio\r\n      precioServicio.classList.add(\"precio-servicio\");\r\n\r\n      //console.log(precioServicio);//para verificar en consola\r\n\r\n      //GENERAR EL DIV CONTENEDOR DE CADA SERVICIO\r\n      const servicioDiv = document.createElement(\"DIV\");\r\n      servicioDiv.classList.add(\"servicio\");\r\n      //console.log(servicioDiv); //para verificar que se vea en la consola\r\n\r\n      servicioDiv.dataset.idServicio = id; //para que seleccione el numero del id que el usuario está seleccionando 2.\r\n\r\n      //Selecciona un servicio para la cita\r\n      servicioDiv.onclick = seleccionarServicio; //se debe crear la fución abajo  2.\r\n\r\n      //INYECTAR LAS VARIABLES DE PRECIO Y NOMBRE AL DIV DE SERVICIO\r\n\r\n      servicioDiv.appendChild(nombreServicio);\r\n      servicioDiv.appendChild(precioServicio);\r\n\r\n      //console.log(servicioDiv);//para verificar en consola\r\n\r\n      //INYECTARLO EN EL HTML - se debe crear una id =\"servicios\" del HTML\r\n      document.querySelector(\"#servicios\").appendChild(servicioDiv); // para visualizarlo en el HTML\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction seleccionarServicio(e) {\r\n  //console.log(e.target.tagName); // el evento se propaga en los hijos (DIV y P)\r\n\r\n  //forzar al elemento al cual le dimos click se el DIV\r\n\r\n  let elemento;\r\n  if (e.target.tagName === \"P\") {\r\n    elemento = e.target.parentElement;\r\n    //console.log(e.target.parentElement); para verificar que si se esté dando el mismo resultado\r\n  } else {\r\n    elemento = e.target;\r\n  }\r\n  //console.log(elemento.dataset.idServicio); // no importa en que parte le demos click, el va a reconocer el id\r\n\r\n  if (elemento.classList.contains(\"seleccionado\")) { // si lo contiene\r\n    elemento.classList.remove(\"seleccionado\"); // entonces removerlo\r\n\r\n    //8. \r\n    //console.log(elemento.dataset.idServicio);\r\n    const id = parseInt(elemento.dataset.idServicio);\r\n\r\n    //5.SE AGREGAN LAS FUNCIONES ELIMINARSEVICIO Y AGREGARSERVICIO para el objeto vacio\r\n      eliminarServicio(id);\r\n\r\n  } else {\r\n    elemento.classList.add(\"seleccionado\"); //y si no lo contiene entonces crearlo\r\n\r\n//7. Vamos a crear un bjeto verificando a que elemento le damos click\r\n    //console.log(elemento.dataset.idServicio);\r\n    //console.log(elemento.firstElementChild.textContent); //eso selecciona el primer hijo del div y se accede al texto con textContet\r\n    //console.log(elemento.firstElementChild.nextElementSibling.textContent); // para acceder al siguiente elemento se hace con nextElementSibling\r\n\r\n    const servicioOb = {\r\n      id:parseInt(elemento.dataset.idServicio),//para pasarlo de string a number\r\n      nombre:elemento.firstElementChild.textContent,\r\n      precio:elemento.firstElementChild.nextElementSibling.textContent\r\n    }\r\n\r\n    //console.log(servicioOb);\r\n\r\n      agregarServicio(servicioOb); //7. para llenar el objeto vacio cuando el usuario da click\r\n  }\r\n}\r\n\r\n\r\nfunction eliminarServicio(id) {\r\n  //console.log(\"Eliminando\");//para verificar que al dar click se se lecciona y al volver a dar se vea Eliminando\r\n  //console.log(\"Eliminando...\", id);//verificamos que se este eliminando el id correcto cuando damos click\r\n  //volvemos a aplicar destructuring\r\n\r\n  const {servicios} = cita; //servicios es una variable nueva que se le asignal objeto cita.servicios\r\n  cita.servicios = servicios.filter(servicio => servicio.id !== id)//para que itere en cada servicio y nos traiga todos los servicios cuyo id sea diferente al que estoy eliminando\r\n\r\n    console.log(cita);//verificamos que funcione eliminar los servicios en la consola\r\n}\r\n\r\nfunction agregarServicio(servicioObjeto) {\r\n  //console.log(\"agregando\");//para verificar que al dar click se se lecciona y al volver a dar se vea agregando\r\n  const {servicios}=cita;\r\n  cita.servicios = [...servicios, servicioObjeto];//tomo una copia de los servicios... y la agrego a servicioObjeto y se lo asignamos a cita.servicios\r\n  console.log(cita);// verificamos que se este agregando el servicio con todos sus atributos\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n  //console.log(\"pagina siguiente\");//para verificar que se estan viendo las funciones en la consola\r\n  const paginaSiguiente = document.querySelector(\"#siguiente\");\r\n  paginaSiguiente.addEventListener(\"click\", () => {\r\n    pagina++;\r\n    //console.log(pagina); //verificamos en consola que aumente las paginas ++\r\n\r\n    botonesPaginador(); //para reiniciar los valores del documento cada vez que damos en sigiuiente o anterior\r\n  });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n  //console.log(\"pagina anterior\");\r\n  const paginaAnterior = document.querySelector(\"#anterior\");\r\n  paginaAnterior.addEventListener(\"click\", () => {\r\n    pagina--;\r\n    //console.log(pagina);\r\n\r\n    botonesPaginador(); //para reiniciar los valores del documento cada vez que damos en sigiuiente o anterior\r\n  });\r\n}\r\n\r\n// Secrea funcion para darle limites a las paginas\r\n\r\nfunction botonesPaginador() {\r\n  const paginaSiguiente = document.querySelector(\"#siguiente\");\r\n  const paginaAnterior = document.querySelector(\"#anterior\");\r\n\r\n  if (pagina === 1) {\r\n    paginaAnterior.classList.add(\"ocultar\");\r\n  } else if (pagina === 3) {\r\n    paginaSiguiente.classList.add(\"ocultar\");\r\n    paginaAnterior.classList.remove(\"ocultar\");\r\n  } else {\r\n    paginaAnterior.classList.remove(\"ocultar\");\r\n    paginaSiguiente.classList.remove(\"ocultar\");\r\n  }\r\n  // con esto cambian las paginas pero no cambia el contenido\r\n  mostrarSeccion(); //entonces se debe de llamar la funcion que cambia las secciones\r\n}\r\n\r\nfunction mostrarResumen() {\r\n  //console.log(cita);// pasamos el nombre del objeto para verificar que se vea en la consola\r\n\r\n  //destructuring\r\n  const { nombre, fecha, hora, servicios } = cita;\r\n\r\n  //Seleccionar el resumen\r\n  const resumenDiv = document.querySelector(\".contenido-resumen\");\r\n\r\n  //validación\r\n  if (Object.values(cita).includes(\"\")) {\r\n    //console.log(\"El objeto esta vacio\")//con esto validamos que el objeto tenga algo\r\n    const noServicios = document.createElement(\"P\");\r\n    noServicios.textContent = \"Faltan datos de Servicio, Nombre, Fecha u Hora\";\r\n\r\n    noServicios.classList.add(\"invalidar-cita\");\r\n\r\n    //agregar resumen Div\r\n    resumenDiv.appendChild(noServicios);\r\n  }\r\n}\r\n\r\nfunction nombreCita() { // 8.CAPTURAR LOS DATOS DEL FORMULARIO\r\n  const nombreInput = document.querySelector(\"#nombre\");\r\n  nombreInput.addEventListener(\"input\", e => {//evento comun para los formularios es el input\r\n    const nombreTexto = e.target.value.trim();//trim elimina los espacios en blanco al inicio y al final\r\n    \r\n    //console.log(nombreTexto);//para verificar que se vea en la consola cada vez que escriba en el input nombre\r\n\r\n    //  9. Validacion de que nombreTexto no tenga caracteres vacios \r\n    if(nombreTexto === \"\" || nombreTexto.length < 3){\r\n      mostrarAlerta(\"Nombre no valido\", \"error\") //tipo error - 10\r\n      //console.log(\"Nombre no valido\");\r\n    } else {\r\n      // 11. Para eliminar la alerta cuando digite bien el nombre\r\n      const alerta = document.querySelector(\".alerta\");\r\n      if (alerta) {//si alerta existe\r\n        alerta.remove();\r\n      }\r\n      \r\n      // se pone en el objeto cita\r\n      cita.nombre = nombreTexto;\r\n      //console.log(cita);\r\n    }\r\n\r\n  })\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo) { // 10\r\n  //console.log(\"El mensaje es\", mensaje);\r\n\r\n  //11. como se ven en la consola varias alrtas, entonces debemos hacer un condicional para no duplicarlas\r\n  //creamos una variable agregandola a alerta\r\n  const alertaPrevia = document.querySelector(\".alerta\");\r\n  if(alertaPrevia){//si alertaPrevia existe, \r\n    //alertaPrevia.remove();//entonces que la elimine, pero esto general HTML\r\n    //la mejor opcion es poniendo un return\r\n    return; //asi cuando detecte la alerta previa, la ejecución finaliza\r\n  }\r\n\r\n\r\n  const alerta = document.createElement(\"DIV\");\r\n  alerta.textContent = mensaje;\r\n  alerta.classList.add(\"alerta\");\r\n\r\n  if (tipo === \"error\") {\r\n    alerta.classList.add(\"error\")\r\n  }\r\n  //console.log(alerta);//verificamos que se vea el div de alerta en la consola\r\n\r\n  //Ahora debemos mostrarla en el HTML en el formulario\r\n  const formulario = document.querySelector(\".formulario\");\r\n  formulario.appendChild(alerta);//creamos una variable para seleccionar la clase .formulario y agregamos el div alerta al hijo\r\n  //CON ESTO HACEMOS QUE LA ALERTA SE VEA EN LA PANTALLA \r\n\r\n\r\n}"]}